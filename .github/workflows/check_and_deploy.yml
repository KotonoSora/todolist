## 1
name: Test and deploy

## Actions that will be executed when you push code currently none
on:
  push:
    branches:
      - 11-config-github-action-build-apk
      - 12-config-action-upload-apk-to-google-play
    tags:
      - 'v*'

## 2
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Decode keystore and create jks and properties file for signing the app
        env:
          ALIAS: ${{ secrets.ALIAS }}
          KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
        run: |
          echo "$SIGNING_KEY" | base64 --decode > ./app/keystore.jks
          echo "storePassword=$KEY_STORE_PASSWORD" >> key.properties
          echo "keyPassword=$KEY_PASSWORD" >> key.properties
          echo "keyAlias=$ALIAS" >> key.properties
          echo "storeFile=keystore.jks" >> key.properties
        shell: bash

      # 2
      - name: Generate Release APK
        run: ./gradlew assembleRelease
      # - name: Generate Release Bundle
      #   run: ./gradlew bundleRelease
      # # 3
      # - name: Sign APK
      #   uses: r0adkll/sign-android-release@v1
      #   # ID used to access action output
      #   id: sign_app
      #   with:
      #     releaseDirectory: app/build/outputs/apk/release
      #     signingKeyBase64: ${{ secrets.SIGNING_KEY }}
      #     alias: ${{ secrets.ALIAS }}
      #     keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
      #     keyPassword: ${{ secrets.KEY_PASSWORD }}
      # 4
      - uses: actions/upload-artifact@v3
        with:
          name: apk-release
          path: app/build/outputs/apk/release
      # - uses: actions/upload-artifact@v3
      #   with:
      #     name: bundle-release
      #     path: app/build/outputs/bundle/release
